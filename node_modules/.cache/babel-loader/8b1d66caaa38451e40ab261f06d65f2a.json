{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/calculator/src/components/Calculator.js\";\nimport React from 'react';\nimport Digit from './Digit';\nimport Input from './Input';\nimport Operation from './Operation';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateValue = value => {\n      if (this.state.isSecond === false) {\n        this.setState(state => ({\n          valueone: state.valueone * state.multiplier\n        }));\n        this.setState(state => ({\n          valueone: state.valueone + value\n        }));\n      } else {\n        this.setState(state => ({\n          valuetwo: state.valuetwo * state.multiplier\n        }));\n        this.setState(state => ({\n          valuetwo: state.valuetwo + value\n        }));\n      }\n\n      this.setState(state => ({\n        multiplier: state.multiplier * 10\n      }));\n    };\n\n    this.checkAnswer = () => {\n      alert(this.state.valueone);\n    };\n\n    this.setOperation = operation => {\n      if (operation === '+' && this.state.isSecond === false) {\n        this.setState({\n          isOperation: 'addition',\n          isSecond: true,\n          multiplier: 1\n        });\n      } else if (operation === '-' && this.state.isSecond === false) {\n        this.setState({\n          isOperation: 'subtraction',\n          isSecond: true,\n          multiplier: 1\n        });\n      } else if (operation === '*' && this.state.isSecond === false) {\n        this.setState({\n          isOperation: 'multiplication',\n          isSecond: true,\n          multiplier: 1\n        });\n      } else if (operation === '/' && this.state.isSecond === false) {\n        this.setState({\n          isOperation: 'division',\n          isSecond: true,\n          multiplier: 1\n        });\n      } else if (operation === '=' && this.state.isSecond === true) {\n        this.setState({\n          isSecond: false,\n          multiplier: 1\n        });\n\n        if (this.state.isOperation === 'addition') {\n          this.setState(state => ({\n            answer: state.valueone + state.valuetwo\n          }));\n        } else if (this.state.isOperation === 'subtraction') {\n          this.setState(state => ({\n            answer: state.valueone - state.valuetwo\n          }));\n        } else if (this.state.isOperation === 'multiplication') {\n          this.setState(state => ({\n            answer: state.valueone * state.valuetwo\n          }));\n        } else if (this.state.isOperation === 'division') {\n          this.setState(state => ({\n            answer: state.valueone / state.valuetwo\n          }));\n        }\n      }\n    };\n\n    this.state = {\n      valueone: 0,\n      valuetwo: 0,\n      answer: 0,\n      multiplier: 1,\n      isSecond: false,\n      isOperation: null\n    };\n  }\n\n  renderInput(i) {\n    return React.createElement(Input, {\n      onChange: () => this.updateValue(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.renderInput(10), \";\", React.createElement(Operation, {\n      operation: 'Check answer',\n      onClick: () => this.checkAnswer(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Digit, {\n      digit: 1,\n      onClick: () => this.updateValue(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 2,\n      onClick: () => this.updateValue(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 3,\n      onClick: () => this.updateValue(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Digit, {\n      digit: 4,\n      onClick: () => this.updateValue(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 5,\n      onClick: () => this.updateValue(5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 6,\n      onClick: () => this.updateValue(6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Digit, {\n      digit: 7,\n      onClick: () => this.updateValue(7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 8,\n      onClick: () => this.updateValue(8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 9,\n      onClick: () => this.updateValue(9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Digit, {\n      digit: 0,\n      onClick: () => this.updateValue(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '+',\n      onClick: () => this.setOperation('+'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '-',\n      onClick: () => this.setOperation('-'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Operation, {\n      operation: '*',\n      onClick: () => this.setOperation('*'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '/',\n      onClick: () => this.setOperation('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '=',\n      onClick: () => this.setOperation('='),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/calculator/src/components/Calculator.js"],"names":["React","Digit","Input","Operation","Calculator","Component","constructor","props","updateValue","value","state","isSecond","setState","valueone","multiplier","valuetwo","checkAnswer","alert","setOperation","operation","isOperation","answer","renderInput","i","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Digit from './Digit';\nimport Input from './Input';\nimport Operation from './Operation';\n\nclass Calculator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalueone: 0,\n\t\t\tvaluetwo: 0,\n\t\t\tanswer: 0,\n\t\t\tmultiplier: 1,\n\t\t\tisSecond: false,\n\t\t\tisOperation: null\n\t\t};\n\t}\n\n\tupdateValue = (value) => {\n\t\tif(this.state.isSecond === false) {\n\t\t\tthis.setState((state) => ({\n\t\t\t\tvalueone: state.valueone * state.multiplier\n\t\t\t}));\n\t\t\tthis.setState((state) => ({\n\t\t\t\tvalueone: state.valueone + value\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tthis.setState((state) => ({\n\t\t\t\tvaluetwo: state.valuetwo * state.multiplier\n\t\t\t}));\n\t\t\tthis.setState((state) => ({\n\t\t\t\tvaluetwo: state.valuetwo + value\n\t\t\t}));\n\t\t}\n\t\tthis.setState ((state) => ({\n\t\t\tmultiplier: state.multiplier * 10\n\t\t}));\n\t}\n\n\tcheckAnswer = () => {\n\t\talert(this.state.valueone);\n\t}\n\n\tsetOperation = (operation) => {\n\t\tif(operation === '+' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tisOperation: 'addition',\n\t\t\t\tisSecond: true,\n\t\t\t\tmultiplier: 1\n\t\t\t});\n\t\t}\n\t\telse if(operation === '-' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tisOperation: 'subtraction',\n\t\t\t\tisSecond: true,\n\t\t\t\tmultiplier: 1\n\t\t\t});\n\t\t}\n\t\telse if(operation === '*' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tisOperation: 'multiplication',\n\t\t\t\tisSecond: true,\n\t\t\t\tmultiplier: 1\t\n\t\t\t});\n\t\t}\n\t\telse if(operation === '/' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tisOperation: 'division',\n\t\t\t\tisSecond: true,\n\t\t\t\tmultiplier: 1\n\t\t\t});\n\t\t}\n\t\telse if(operation === '=' && this.state.isSecond === true) {\n\t\t\tthis.setState({\n\t\t\t\tisSecond: false,\n\t\t\t\tmultiplier: 1\n\t\t\t});\n\t\t\tif(this.state.isOperation === 'addition') {\n\t\t\t\tthis.setState ((state) => ({\n\t\t\t\t\tanswer: state.valueone + state.valuetwo\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'subtraction') {\n\t\t\t\tthis.setState ((state) => ({\n\t\t\t\t\tanswer: state.valueone - state.valuetwo\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'multiplication') {\n\t\t\t\tthis.setState ((state) => ({\n\t\t\t\t\tanswer: state.valueone * state.valuetwo\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'division') {\n\t\t\t\tthis.setState ((state) => ({\n\t\t\t\t\tanswer: state.valueone / state.valuetwo\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\trenderInput(i) {\n\t\treturn (\n\t\t    <Input \n\t\t\t\tonChange = {() => this.updateValue(i) }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\t\t\t\t\n\t\t\t\t{this.renderInput(10)};\n\t\t\t\t<Operation operation = {'Check answer'} onClick={() => this.checkAnswer()} />\n\t\t\t\t<div className=\"ui buttons\">\n\t\t\t\t\t<Digit digit = {1} onClick={() => this.updateValue(1)} />\n\t\t\t\t\t<Digit digit = {2} onClick={() => this.updateValue(2)} />\n\t\t\t\t\t<Digit digit = {3} onClick={() => this.updateValue(3)} />\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"ui buttons\">\n\t\t\t    \t<Digit digit = {4} onClick={() => this.updateValue(4)} />\n\t\t\t    \t<Digit digit = {5} onClick={() => this.updateValue(5)} />\n\t\t\t    \t<Digit digit = {6} onClick={() => this.updateValue(6)} />\n\t\t\t    </div>\n\t\t\t    <br/>\n\t\t\t    <div className=\"ui buttons\">\n\t\t\t\t\t<Digit digit = {7} onClick={() => this.updateValue(7)} />\n\t\t\t\t\t<Digit digit = {8} onClick={() => this.updateValue(8)} />\n\t\t\t\t\t<Digit digit = {9} onClick={() => this.updateValue(9)} />\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"ui buttons\">\n\t\t\t\t\t<Digit digit = {0} onClick={() => this.updateValue(0)} />\n\t\t\t\t\t<Operation operation = {'+'} onClick={() => this.setOperation('+')}  />\n\t\t\t\t\t<Operation operation = {'-'} onClick={() => this.setOperation('-')}  />\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"ui buttons\">\n\t\t\t\t\t<Operation operation = {'*'} onClick={() => this.setOperation('*')}  />\n\t\t\t\t\t<Operation operation = {'/'} onClick={() => this.setOperation('/')}  />\n\t\t\t\t\t<Operation operation = {'='} onClick={() => this.setOperation('=')}  />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}