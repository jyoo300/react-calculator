{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/calculator/src/components/Calculator.js\";\nimport React from 'react';\nimport Digit from './Digit';\nimport Input from './Input';\nimport Operation from './Operation';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateValue = value => {\n      if (this.isSecond === false) {\n        this.setState({\n          currentVal: value,\n          valuetwo: value\n        });\n      } else {}\n    };\n\n    this.setOperation = operation => {\n      if (operation === '+' && this.state.isSecond === false) {\n        this.setState({\n          valueone: null,\n          isOperation: 'addition',\n          isSecond: true\n        });\n      } else if (operation === '-' && this.state.isSecond === false) {\n        this.setState({\n          valueone: this.state.currentVal,\n          isOperation: 'subtraction',\n          isSecond: true\n        });\n      } else if (operation === '*' && this.state.isSecond === false) {\n        this.setState({\n          valueone: this.state.currentVal,\n          isOperation: 'multiplication',\n          isSecond: true\n        });\n      } else if (operation === '/' && this.state.isSecond === false) {\n        this.setState({\n          valueone: this.state.currentVal,\n          isOperation: 'division',\n          isSecond: true\n        });\n      } else if (operation === '=' && this.state.isSecond === true) {\n        this.setState({\n          value2: this.state.currentVal,\n          isSecond: false\n        });\n\n        if (this.state.isOperation === 'addition') {\n          this.setState({\n            answer: this.state.value1 + this.state.value2\n          });\n          alert(this.state.answer);\n        } else if (this.state.isOperation === 'subtraction') {\n          this.setState({\n            answer: this.state.value1 - this.state.value2\n          });\n          alert(this.state.answer);\n        } else if (this.state.isOperation === 'multiplication') {\n          this.setState({\n            answer: this.state.value1 * this.state.value2\n          });\n          alert(this.state.answer);\n        } else if (this.state.isOperation === 'division') {\n          this.setState({\n            answer: this.state.value1 / this.state.value2\n          });\n          alert(this.state.answer);\n        }\n      }\n    };\n\n    this.state = {\n      valueone: 0,\n      valuetwo: 0,\n      currentVal: 0,\n      answer: 0,\n      isSecond: false,\n      isOperation: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 1,\n      onClick: () => this.updateValue(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 2,\n      onClick: () => this.updateValue(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 3,\n      onClick: () => this.updateValue(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 4,\n      onClick: () => this.updateValue(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 5,\n      onClick: () => this.updateValue(5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 6,\n      onClick: () => this.updateValue(6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 7,\n      onClick: () => this.updateValue(7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 8,\n      onClick: () => this.updateValue(8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 9,\n      onClick: () => this.updateValue(9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Digit, {\n      digit: 0,\n      onClick: () => this.updateValue(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '+',\n      onClick: () => this.setOperation('+'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '-',\n      onClick: () => this.setOperation('-'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '*',\n      onClick: () => this.setOperation('*'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '/',\n      onClick: () => this.setOperation('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Operation, {\n      operation: '=',\n      onClick: () => this.setOperation('='),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/calculator/src/components/Calculator.js"],"names":["React","Digit","Input","Operation","Calculator","Component","constructor","props","updateValue","value","isSecond","setState","currentVal","valuetwo","setOperation","operation","state","valueone","isOperation","value2","answer","value1","alert","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Digit from './Digit';\nimport Input from './Input';\nimport Operation from './Operation';\n\nclass Calculator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalueone: 0,\n\t\t\tvaluetwo: 0,\n\t\t\tcurrentVal: 0,\n\t\t\tanswer: 0,\n\t\t\tisSecond: false,\n\t\t\tisOperation: null\n\t\t};\n\t}\n\n\tupdateValue = (value) => {\n\t\tif(this.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentVal: value,\n\t\t\t\tvaluetwo: value\n\t\t\t});\n\t\t}\n\t\telse {\n\n\t\t}\n\t}\n\n\tsetOperation = (operation) => {\n\t\tif(operation === '+' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tvalueone: null,\n\t\t\t\tisOperation: 'addition',\n\t\t\t\tisSecond: true\n\t\t\t});\n\t\t}\n\t\telse if(operation === '-' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tvalueone: this.state.currentVal,\n\t\t\t\tisOperation: 'subtraction',\n\t\t\t\tisSecond: true\n\t\t\t});\n\t\t}\n\t\telse if(operation === '*' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tvalueone: this.state.currentVal,\n\t\t\t\tisOperation: 'multiplication',\n\t\t\t\tisSecond: true\n\t\t\t});\n\t\t}\n\t\telse if(operation === '/' && this.state.isSecond === false) {\n\t\t\tthis.setState({\n\t\t\t\tvalueone: this.state.currentVal,\n\t\t\t\tisOperation: 'division',\n\t\t\t\tisSecond: true\n\t\t\t});\n\t\t}\n\t\telse if(operation === '=' && this.state.isSecond === true) {\n\t\t\tthis.setState({\n\t\t\t\tvalue2: this.state.currentVal,\n\t\t\t\tisSecond: false\n\t\t\t});\n\t\t\tif(this.state.isOperation === 'addition') {\n\t\t\t\tthis.setState ({\n\t\t\t\t\tanswer: this.state.value1 + this.state.value2\n\t\t\t\t});\n\t\t\t\talert(this.state.answer);\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'subtraction') {\n\t\t\t\tthis.setState ({\n\t\t\t\t\tanswer: this.state.value1 - this.state.value2\n\t\t\t\t});\n\t\t\t\talert(this.state.answer);\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'multiplication') {\n\t\t\t\tthis.setState ({\n  \t\t\t\t\tanswer: this.state.value1 * this.state.value2\n\t\t\t\t});\n\t\t\t\talert(this.state.answer);\t\n\t\t\t}\n\t\t\telse if(this.state.isOperation === 'division') {\n\t\t\t\tthis.setState ({\n\t\t\t\t\tanswer: this.state.value1 / this.state.value2\n\t\t\t\t});\n\t\t\t\talert(this.state.answer);\t\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Input />\n\t\t\t\t<Digit digit = {1} onClick={() => this.updateValue(1)} />\n\t\t\t\t<Digit digit = {2} onClick={() => this.updateValue(2)} />\n\t\t\t\t<Digit digit = {3} onClick={() => this.updateValue(3)} />\n\t\t\t    <Digit digit = {4} onClick={() => this.updateValue(4)} />\n\t\t\t    <Digit digit = {5} onClick={() => this.updateValue(5)} />\n\t\t\t    <Digit digit = {6} onClick={() => this.updateValue(6)} />\n\t\t\t\t<Digit digit = {7} onClick={() => this.updateValue(7)} />\n\t\t\t\t<Digit digit = {8} onClick={() => this.updateValue(8)} />\n\t\t\t\t<Digit digit = {9} onClick={() => this.updateValue(9)} />\n\t\t\t\t<Digit digit = {0} onClick={() => this.updateValue(0)} />\n\n\t\t\t\t<Operation operation = {'+'} onClick={() => this.setOperation('+')}  />\n\t\t\t\t<Operation operation = {'-'} onClick={() => this.setOperation('-')}  />\n\t\t\t\t<Operation operation = {'*'} onClick={() => this.setOperation('*')}  />\n\t\t\t\t<Operation operation = {'/'} onClick={() => this.setOperation('/')}  />\n\t\t\t\t<Operation operation = {'='} onClick={() => this.setOperation('=')}  />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}